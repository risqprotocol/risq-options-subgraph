specVersion: 0.0.2
description: Risq Protocol Crypto Options.
repository: https://github.com/risqprotocol/risq-options-subgraph/
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: RisqWBTCOptions
    network: mainnet
    source:
      address: '0xe1ffbb1999a5ab58c3cd8343823ce8e87a53e656'
      abi: RisqOptions
      startBlock: 11029620
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/RisqWBTCOptions.ts
      entities:
        - RisqOption
        - LiquidityPool
      abis:
        - name: RisqOptions
          file: ./abis/IRisqOptions.json
        - name: LiquidityPool
          file: ./abis/ILiquidityPool.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Create(indexed uint256,indexed address,uint256,uint256)
          handler: handleCreate
        - event: Exercise(indexed uint256,uint256)
          handler: handleExercise
        - event: Expire(indexed uint256,uint256)
          handler: handleExpire
      callHandlers:
        - function: setImpliedVolRate(uint256)
          handler: handleSetImpliedVolRate
  - kind: ethereum/contract
    name: RisqETHOptions
    network: mainnet
    source:
      address: '0x54fa24438370b5e7f64a1c78319d0c1048d14711'
      abi: RisqOptions
      startBlock: 11054458
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/RisqETHOptions.ts
      entities:
        - RisqOption
        - LiquidityPool
      abis:
        - name: RisqOptions
          file: ./abis/IRisqOptions.json
        - name: LiquidityPool
          file: ./abis/ILiquidityPool.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Create(indexed uint256,indexed address,uint256,uint256)
          handler: handleCreate
        - event: Exercise(indexed uint256,uint256)
          handler: handleExercise
        - event: Expire(indexed uint256,uint256)
          handler: handleExpire
      callHandlers:
        - function: setImpliedVolRate(uint256)
          handler: handleSetImpliedVolRate
  - kind: ethereum/contract
    name: WBTCLiquidityPool
    network: mainnet
    source:
      address: '0x5d6e644ebee654a78beb1207f33ce79ca475fd4e'
      abi: LiquidityPool
      startBlock: 11029620
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/WBTCLiquidityPool.ts
      entities:
        - LiquidityPool
      abis:
        - name: RisqOptions
          file: ./abis/IRisqOptions.json
        - name: LiquidityPool
          file: ./abis/ILiquidityPool.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Profit(indexed uint256,uint256)
          handler: handleProfit
        - event: Loss(indexed uint256,uint256)
          handler: handleLoss
        - event: Provide(indexed address,uint256,uint256)
          handler: handleProvide
        - event: Withdraw(indexed address,uint256,uint256)
          handler: handleWithdraw
  - kind: ethereum/contract
    name: ETHLiquidityPool
    network: mainnet
    source:
      address: '0x7095b510f402463df8db51de869629f7094487c2'
      abi: LiquidityPool
      startBlock: 11054458
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/ETHLiquidityPool.ts
      entities:
        - LiquidityPool
      abis:
        - name: RisqOptions
          file: ./abis/IRisqOptions.json
        - name: LiquidityPool
          file: ./abis/ILiquidityPool.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Profit(indexed uint256,uint256)
          handler: handleProfit
        - event: Loss(indexed uint256,uint256)
          handler: handleLoss
        - event: Provide(indexed address,uint256,uint256)
          handler: handleProvide
        - event: Withdraw(indexed address,uint256,uint256)
          handler: handleWithdraw